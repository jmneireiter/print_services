# credit: http://www.tunnelsup.com/ssh-without-password/
# credit: http://www.tunnelsup.com/raspberry-pi-phoning-home-using-a-reverse-remote-ssh-tunnel

# 1. **** create the private key on the raspberry pi ****
# login to raspberry pi and issue the following:
cd ~/.ssh
ssh-keygen -t rsa
# accept default prompts
# no passphrase


# 2. **** secure copy to server ****
scp id_rsa.pub johncobb@appserver05.cphandheld.com:.ssh/authorized_keys
# test your connection
ssh johncobb@appserver05.cphandheld.com
# should connect without password promt (if not ask google)


# 3. **** create the reverse ssh tunnel ****
# issue following from raspberry pi
ssh -N -R 2222:localhost:22 johncobb@appserver05.cphandheld.com

# issue following from server to connecto to pi
ssh -l pi -p 2222 localhost
# or
ssh pi@localhost -p 2222


# 4. **** make the connection persistent ****
# create a file on raspberry pi called ~/create_ssh_tunnel and paste the following code:

# begin ssh_file
#!/bin/bash
createTunnel() {
  /usr/bin/ssh -N -R 2222:localhost:22 johncobb@appserver05.cphandheld.com
  if [[ $? -eq 0 ]]; then
    echo Tunnel to appserver05.cphandheld.com created successfully
  else
    echo An error occurred creating a tunnel to jumpbox. RC was $?
  fi
}
/bin/pidof ssh
if [[ $? -ne 0 ]]; then
  echo Creating new tunnel connection
  createTunnel
fi
# end ssh_file

# Next make it executable by doing the following:
chmod a+x ~/create_ssh_tunnel

# start crontab
crontab -e
# place the following entry into crontab (look into starting 1 min after boot)
@reboot /usr/bin/python /home/pi/print_services/main.py > /home/pi/log.dat
@reboot /bin/bash /home/pi/create_ssh_tunnel > /home/pi/tunnel.log
 
 # turn on crontab logging
 nano /etc/rsyslog.conf
 # uncomment the followin line
 # cron.*		/var/log/cron.log
 # afterwards restart rsyslog via
 /etc/init.d/rsyslog restart
 # to view logging
 cat /var/log/cron.log
 
 # installing pyserial
 sudo apt-get install python-serial
 
 # add post-up command in /etc/network/interfaces
 # sudo nano interfaces
 post-up /home/pi/create_ssh_tunnel > /home/pi/tunnel.log &
 
 # other commands
 crontab -e
 crontab -l
 
 
 # tell server to automatically log out idle ssh connections after 5 min.
sudo nano /etc/ssh/sshd_config 
# paste in following entries
#CPH Printer Phone Home Timeouts
ClientAliveInterval 30
ClientAliveCountMax 20

# issue the following for changes to take effect
killall -HUP sshd
 






